# Generated by Django 5.2.4 on 2025-07-07 16:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="GithubLabel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gh_id",
                    models.BigIntegerField(
                        help_text="GitHub ID of the object", null=True, unique=True
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=255, null=True)),
                ("internal_created_at", models.DateTimeField(auto_now_add=True)),
                ("internal_updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GithubMilestone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gh_id",
                    models.BigIntegerField(
                        help_text="GitHub ID of the object", null=True, unique=True
                    ),
                ),
                ("internal_created_at", models.DateTimeField(auto_now_add=True)),
                ("internal_updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "state",
                    models.CharField(
                        choices=[("open", "Open"), ("closed", "Closed")],
                        default="open",
                        max_length=50,
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=255, null=True)),
                ("due_on", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GithubRepository",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gh_id",
                    models.BigIntegerField(
                        help_text="GitHub ID of the object", null=True, unique=True
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=255, null=True)),
                ("internal_created_at", models.DateTimeField(auto_now_add=True)),
                ("internal_updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GithubUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gh_id",
                    models.BigIntegerField(
                        help_text="GitHub ID of the object", null=True, unique=True
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=255, null=True)),
                ("internal_created_at", models.DateTimeField(auto_now_add=True)),
                ("internal_updated_at", models.DateTimeField(auto_now=True)),
                ("username", models.CharField(max_length=255, unique=True)),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GithubPullRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gh_id",
                    models.BigIntegerField(
                        help_text="GitHub ID of the object", null=True, unique=True
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=255, null=True)),
                ("internal_created_at", models.DateTimeField(auto_now_add=True)),
                ("internal_updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("body", models.TextField(blank=True, null=True)),
                (
                    "number",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Pull request number in the repository",
                        null=True,
                        unique=True,
                    ),
                ),
                ("is_draft", models.BooleanField(default=False)),
                ("is_merged", models.BooleanField(default=False)),
                ("is_closed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("merged_at", models.DateTimeField(blank=True, null=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "labels",
                    models.ManyToManyField(
                        blank=True,
                        related_name="pull_requests",
                        to="eb_gh_cli.githublabel",
                    ),
                ),
                (
                    "milestone",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pull_requests",
                        to="eb_gh_cli.githubmilestone",
                    ),
                ),
                (
                    "repository",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pull_requests",
                        to="eb_gh_cli.githubrepository",
                    ),
                ),
                (
                    "assignees",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_pull_requests",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_pull_requests",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
                (
                    "merged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="merged_pull_requests",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        blank=True,
                        related_name="participated_pull_requests",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
                (
                    "reviewers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="reviewed_pull_requests",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="githubmilestone",
            name="repository",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="milestones",
                to="eb_gh_cli.githubrepository",
            ),
        ),
        migrations.AddField(
            model_name="githublabel",
            name="repository",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="labels",
                to="eb_gh_cli.githubrepository",
            ),
        ),
        migrations.CreateModel(
            name="GithubIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gh_id",
                    models.BigIntegerField(
                        help_text="GitHub ID of the object", null=True, unique=True
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=255, null=True)),
                ("internal_created_at", models.DateTimeField(auto_now_add=True)),
                ("internal_updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("body", models.TextField(blank=True, null=True)),
                (
                    "number",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Issue number in the repository",
                        null=True,
                        unique=True,
                    ),
                ),
                ("is_closed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "labels",
                    models.ManyToManyField(
                        blank=True, related_name="issues", to="eb_gh_cli.githublabel"
                    ),
                ),
                (
                    "milestone",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="eb_gh_cli.githubmilestone",
                    ),
                ),
                (
                    "repository",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="eb_gh_cli.githubrepository",
                    ),
                ),
                (
                    "assignees",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_issues",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
                (
                    "closed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="closed_issues",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_issues",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        blank=True,
                        related_name="participated_issues",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="githubrepository",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="repositories",
                to="eb_gh_cli.githubuser",
            ),
        ),
        migrations.CreateModel(
            name="GithubPRReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gh_id",
                    models.BigIntegerField(
                        help_text="GitHub ID of the object", null=True, unique=True
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=255, null=True)),
                ("internal_created_at", models.DateTimeField(auto_now_add=True)),
                ("internal_updated_at", models.DateTimeField(auto_now=True)),
                ("body", models.TextField()),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("APPROVED", "Approved"),
                            ("CHANGES_REQUESTED", "Changes Requested"),
                            ("COMMENTED", "Commented"),
                            ("DISMISSED", "Dismissed"),
                        ],
                        default="COMMENTED",
                        max_length=50,
                    ),
                ),
                ("submitted_at", models.DateTimeField()),
                (
                    "pull_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="eb_gh_cli.githubpullrequest",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_pull_request_reviews",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GithubPRComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gh_id",
                    models.BigIntegerField(
                        help_text="GitHub ID of the object", null=True, unique=True
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=255, null=True)),
                ("internal_created_at", models.DateTimeField(auto_now_add=True)),
                ("internal_updated_at", models.DateTimeField(auto_now=True)),
                ("body", models.TextField()),
                ("created_at", models.DateTimeField()),
                (
                    "pull_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="eb_gh_cli.githubpullrequest",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_pull_request_comments",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="githubmilestone",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_milestones",
                to="eb_gh_cli.githubuser",
            ),
        ),
        migrations.CreateModel(
            name="GithubIssueComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gh_id",
                    models.BigIntegerField(
                        help_text="GitHub ID of the object", null=True, unique=True
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=255, null=True)),
                ("internal_created_at", models.DateTimeField(auto_now_add=True)),
                ("internal_updated_at", models.DateTimeField(auto_now=True)),
                ("body", models.TextField()),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="eb_gh_cli.githubissue",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_comments",
                        to="eb_gh_cli.githubuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
