"""
Django settings for eb_gh_cli project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
# pylint: skip-file
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
GH_DB_ROOT = os.environ.get('GH_DB_ROOT', os.path.expanduser('~/.gh_db'))

stream_handler = 'logging.StreamHandler'
stream_handler_kwargs = {}
try:
    from rich.logging import RichHandler
except:
    pass
else:
    stream_handler = 'rich.logging.RichHandler'
    stream_handler_kwargs = {
        'rich_tracebacks': True,
        'tracebacks_suppress': ['click'],
    }


# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'medium': {
            'format': '{asctime} - {levelname:>7s} - {name:>15s}:{module:<15s} - {message}',
            'style': '{',
            },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': os.environ.get('DJANGO_LOG_LEVEL', 'INFO').upper(),
            # 'filters': ['require_debug_true'],
            'class': stream_handler,
            'formatter': 'medium',
            **stream_handler_kwargs,
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': False,
        },
        'django.request': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': False,
        },
        'gh_db': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_DEBUG', '').lower() == 'true'

# Application definition
INSTALLED_APPS = [
    'eb_gh_cli'
]

MIDDLEWARE = []

TEMPLATES = []

STORAGES = {
    # 'default': {
    #     'BACKEND': 'eb_gh_cli.storage.HashStorage',
    #     'OPTIONS': {
    #         'location': os.environ.get('STORAGE_LOCATION', os.path.join(GH_DB_ROOT, 'files')),
    #         'compression': 'gzip',
    #     }
    # },
    'default': {
        'BACKEND': 'eb_gh_cli.storage.DOSStorage',
        'OPTIONS': {
            'location': os.environ.get('STORAGE_LOCATION', os.path.join(GH_DB_ROOT, 'files')),
        }
    },
}

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASE_ENGINE = os.environ.get('DATABASE_ENGINE', 'django.db.backends.sqlite3')
DATABASE_NAME = os.environ.get('DATABASE_NAME', None)
if DATABASE_NAME is None:
    os.makedirs(GH_DB_ROOT, exist_ok=True)
    DATABASE_NAME = os.path.join(GH_DB_ROOT, 'gh_db.sqlite3')

DATABASE = {
    'ENGINE': DATABASE_ENGINE,
    'NAME': DATABASE_NAME,
}

for k in ['USER', 'PASSWORD', 'HOST', 'PORT']:
    if not os.environ.get('DATABASE_' + k) is None:
        DATABASE[k] = os.environ.get('DATABASE_' + k)

OPTIONS = {}
if DATABASE_ENGINE == 'django.db.backends.mysql':
    # https://stackoverflow.com/questions/2108824/mysql-incorrect-string-value-error-when-save-unicode-string-in-django
    OPTIONS['charset'] = 'utf8mb4'

if DATABASE_ENGINE == 'django.db.backends.sqlite3':
    ptr = {}
    DATABASE['OPTIONS'] = ptr
    ptr['init_command'] = 'PRAGMA journal_mode=wal;'

DATABASES = {
    'default': DATABASE
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = []


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
